{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGoods","selectGood","key","setState","prevState","removeGood","index","indexOf","copyState","splice","clearGoods","getGoodsList","goods","reduce","resultStr","good","i","array","length","slice","trim","className","this","type","onClick","goodsFromServer","map","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"6NAAe,G,MAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCDWA,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAKEC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GAAD,MACZ,CAAEJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,SAPpD,EAWEG,WAAa,SAACH,GACZ,IAAMI,EAAQ,EAAKP,MAAMC,cAAcO,QAAQL,GACzCM,EAAS,YAAO,EAAKT,MAAMC,eAEjCQ,EAAUC,OAAOH,EAAO,GAExB,EAAKH,SAAS,CAAEH,cAAc,YAAKQ,MAjBvC,EAoBEE,WAAa,WACX,EAAKP,SAAS,CAAEH,cAAe,MArBnC,EAwBEW,aAAe,SAACC,GACd,OAAOA,EAAMC,QAAO,SAACC,EAAWC,EAAMC,EAAGC,GACvC,OAAID,IAAMC,EAAMC,OAAS,GAAKD,EAAMC,OAAS,EACrC,GAAN,OAAUJ,EAAUK,MAAM,EAAGL,EAAUI,OAAS,GAAhD,gBAA0DH,GAGxDE,EAAMC,OAAS,EACX,GAAN,OAAUJ,EAAV,YAAuBC,EAAvB,KAGI,GAAN,OAAUD,EAAV,YAAuBC,KACtB,IAAIK,QAnCX,4CAsCE,WAAU,IAAD,OACP,OACE,sBAAMC,UAAU,YAAhB,SACE,sBAAKA,UAAU,MAAf,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SACGC,KAAKvB,MAAMC,cAAckB,OAAzB,UACMI,KAAKX,aAAaW,KAAKvB,MAAMC,eADnC,gBAEG,sBAGLsB,KAAKvB,MAAMC,cAAc,IACxB,wBACEuB,KAAK,SACLF,UAAU,wBACVG,QAASF,KAAKZ,WAHhB,sBAUJ,oBAAIW,UAAU,OAAd,SACGI,EAAgBC,KAAI,SAAAX,GACnB,OAAI,EAAKhB,MAAMC,cAAc2B,SAASZ,GAElC,qBAAeM,UAAU,oBAAzB,UACGN,EACD,wBACEQ,KAAK,SACLF,UAAU,0BACVG,QAAS,WACP,EAAKnB,WAAWU,IAJpB,sBAFOA,GAgBX,qBAAeM,UAAU,eAAzB,UACGN,EACD,wBACEQ,KAAK,SACLF,UAAU,4BACVG,QAAS,WACP,EAAKvB,WAAWc,IAJpB,sBAFOA,iBAhFzB,GAAyBa,aCNzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fcc0e365.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import { Component } from 'react';\nimport './App.scss';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGoods: string[],\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  selectGood = (key: string) => {\n    this.setState((prevState) => (\n      { selectedGoods: [...prevState.selectedGoods, key] }\n    ));\n  };\n\n  removeGood = (key: string) => {\n    const index = this.state.selectedGoods.indexOf(key);\n    const copyState = [...this.state.selectedGoods];\n\n    copyState.splice(index, 1);\n\n    this.setState({ selectedGoods: [...copyState] });\n  };\n\n  clearGoods = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  getGoodsList = (goods: string[]) => {\n    return goods.reduce((resultStr, good, i, array) => {\n      if (i === array.length - 1 && array.length > 1) {\n        return `${resultStr.slice(0, resultStr.length - 1)} and ${good}`;\n      }\n\n      if (array.length > 1) {\n        return `${resultStr} ${good},`;\n      }\n\n      return `${resultStr} ${good}`;\n    }, '').trim();\n  };\n\n  render() {\n    return (\n      <main className=\"container\">\n        <div className=\"App\">\n          <header className=\"App__header\">\n            <h1 className=\"App__title\">\n              {this.state.selectedGoods.length\n                ? `${this.getGoodsList(this.state.selectedGoods)} is selected`\n                : 'No goods selected'}\n            </h1>\n\n            {this.state.selectedGoods[0] && (\n              <button\n                type=\"button\"\n                className=\"button button__remove\"\n                onClick={this.clearGoods}\n              >\n                Clear\n              </button>\n            )}\n          </header>\n\n          <ul className=\"list\">\n            {goodsFromServer.map(good => {\n              if (this.state.selectedGoods.includes(good)) {\n                return (\n                  <li key={good} className=\"Good Good--active\">\n                    {good}\n                    <button\n                      type=\"button\"\n                      className=\"button button__selected\"\n                      onClick={() => {\n                        this.removeGood(good);\n                      }}\n                    >\n                      Remove\n                    </button>\n                  </li>\n                );\n              }\n\n              return (\n                <li key={good} className=\"Good control\">\n                  {good}\n                  <button\n                    type=\"button\"\n                    className=\"button button__unselected\"\n                    onClick={() => {\n                      this.selectGood(good);\n                    }}\n                  >\n                    Select\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}